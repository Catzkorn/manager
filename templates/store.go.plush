// Code generated by oto; DO NOT EDIT.

package <%= def.PackageName %>

import (

	<%= for (importPath, name) in def.Imports { %>
	<%= name %> "<%= importPath %>"
	<% } %>
)



	type Store interface {
<%= for (object) in def.Objects { %>
	<%=  if (object.Metadata["store"] == "interface") { %> 
	Create<%= object.Name %>(<%= object.Name %>) error
	Get<%= object.Name %>(<%= object.Name %>) (<%= object.Name %>, error)
	<%= for (field) in object.Fields { %><%=  if (field.Metadata["store"] == "pk") { %> Get<%= object.Name %>By<%= field.Name %>(uint32) (<%= object.Name %>, error)<% } %><% } %>
	<%= for (field) in object.Fields { %><%=  if (field.Metadata["store"] == "hasmany") { %> Get<%= object.Name %><%= field.Name %>(uint32) ([]<%= field.Type.TypeName %>, error)<% } %><% } %>
	Update<%= object.Name %>(<%= object.Name %>) error
	Delete<%= object.Name %>(<%= object.Name %>) error
	<%= for (field) in object.Fields { %><%=  if (field.Metadata["store"] == "pk") { %> Delete<%= object.Name %>By<%= field.Name %>(uint32) (<%= object.Name %>, error)<% } %><% } %>

<% } %>
<% } %>

}